// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.5
// source: game_quiz.proto

package game

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GameQuiz struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	GameId        uint64                 `protobuf:"varint,1,opt,name=game_id,json=gameId,proto3" json:"game_id,omitempty"`
	PlayerIds     []uint64               `protobuf:"varint,2,rep,packed,name=player_ids,json=playerIds,proto3" json:"player_ids,omitempty"`
	Questions     []*Question            `protobuf:"bytes,3,rep,name=questions,proto3" json:"questions,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GameQuiz) Reset() {
	*x = GameQuiz{}
	mi := &file_game_quiz_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GameQuiz) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameQuiz) ProtoMessage() {}

func (x *GameQuiz) ProtoReflect() protoreflect.Message {
	mi := &file_game_quiz_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameQuiz.ProtoReflect.Descriptor instead.
func (*GameQuiz) Descriptor() ([]byte, []int) {
	return file_game_quiz_proto_rawDescGZIP(), []int{0}
}

func (x *GameQuiz) GetGameId() uint64 {
	if x != nil {
		return x.GameId
	}
	return 0
}

func (x *GameQuiz) GetPlayerIds() []uint64 {
	if x != nil {
		return x.PlayerIds
	}
	return nil
}

func (x *GameQuiz) GetQuestions() []*Question {
	if x != nil {
		return x.Questions
	}
	return nil
}

type Question struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	Id              uint64                 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Text            string                 `protobuf:"bytes,2,opt,name=text,proto3" json:"text,omitempty"`
	PossibleAnswers []*PossibleAnswer      `protobuf:"bytes,3,rep,name=possible_answers,json=possibleAnswers,proto3" json:"possible_answers,omitempty"`
	CorrectAnswer   uint32                 `protobuf:"varint,4,opt,name=correct_answer,json=correctAnswer,proto3" json:"correct_answer,omitempty"`
	Difficulty      uint32                 `protobuf:"varint,5,opt,name=difficulty,proto3" json:"difficulty,omitempty"`
	Category        string                 `protobuf:"bytes,6,opt,name=category,proto3" json:"category,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *Question) Reset() {
	*x = Question{}
	mi := &file_game_quiz_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Question) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Question) ProtoMessage() {}

func (x *Question) ProtoReflect() protoreflect.Message {
	mi := &file_game_quiz_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Question.ProtoReflect.Descriptor instead.
func (*Question) Descriptor() ([]byte, []int) {
	return file_game_quiz_proto_rawDescGZIP(), []int{1}
}

func (x *Question) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Question) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *Question) GetPossibleAnswers() []*PossibleAnswer {
	if x != nil {
		return x.PossibleAnswers
	}
	return nil
}

func (x *Question) GetCorrectAnswer() uint32 {
	if x != nil {
		return x.CorrectAnswer
	}
	return 0
}

func (x *Question) GetDifficulty() uint32 {
	if x != nil {
		return x.Difficulty
	}
	return 0
}

func (x *Question) GetCategory() string {
	if x != nil {
		return x.Category
	}
	return ""
}

type PossibleAnswer struct {
	state                protoimpl.MessageState `protogen:"open.v1"`
	Id                   uint64                 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Text                 string                 `protobuf:"bytes,2,opt,name=text,proto3" json:"text,omitempty"`
	PossibleAnswerChoice uint32                 `protobuf:"varint,3,opt,name=possible_answer_choice,json=possibleAnswerChoice,proto3" json:"possible_answer_choice,omitempty"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *PossibleAnswer) Reset() {
	*x = PossibleAnswer{}
	mi := &file_game_quiz_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PossibleAnswer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PossibleAnswer) ProtoMessage() {}

func (x *PossibleAnswer) ProtoReflect() protoreflect.Message {
	mi := &file_game_quiz_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PossibleAnswer.ProtoReflect.Descriptor instead.
func (*PossibleAnswer) Descriptor() ([]byte, []int) {
	return file_game_quiz_proto_rawDescGZIP(), []int{2}
}

func (x *PossibleAnswer) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *PossibleAnswer) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *PossibleAnswer) GetPossibleAnswerChoice() uint32 {
	if x != nil {
		return x.PossibleAnswerChoice
	}
	return 0
}

var File_game_quiz_proto protoreflect.FileDescriptor

const file_game_quiz_proto_rawDesc = "" +
	"\n" +
	"\x0fgame_quiz.proto\x12\x04game\"p\n" +
	"\bGameQuiz\x12\x17\n" +
	"\agame_id\x18\x01 \x01(\x04R\x06gameId\x12\x1d\n" +
	"\n" +
	"player_ids\x18\x02 \x03(\x04R\tplayerIds\x12,\n" +
	"\tquestions\x18\x03 \x03(\v2\x0e.game.QuestionR\tquestions\"\xd2\x01\n" +
	"\bQuestion\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x04R\x02id\x12\x12\n" +
	"\x04text\x18\x02 \x01(\tR\x04text\x12?\n" +
	"\x10possible_answers\x18\x03 \x03(\v2\x14.game.PossibleAnswerR\x0fpossibleAnswers\x12%\n" +
	"\x0ecorrect_answer\x18\x04 \x01(\rR\rcorrectAnswer\x12\x1e\n" +
	"\n" +
	"difficulty\x18\x05 \x01(\rR\n" +
	"difficulty\x12\x1a\n" +
	"\bcategory\x18\x06 \x01(\tR\bcategory\"j\n" +
	"\x0ePossibleAnswer\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x04R\x02id\x12\x12\n" +
	"\x04text\x18\x02 \x01(\tR\x04text\x124\n" +
	"\x16possible_answer_choice\x18\x03 \x01(\rR\x14possibleAnswerChoiceBAZ?golang.project/go-fundamentals/gameapp/contract/goprotobuf/gameb\x06proto3"

var (
	file_game_quiz_proto_rawDescOnce sync.Once
	file_game_quiz_proto_rawDescData []byte
)

func file_game_quiz_proto_rawDescGZIP() []byte {
	file_game_quiz_proto_rawDescOnce.Do(func() {
		file_game_quiz_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_game_quiz_proto_rawDesc), len(file_game_quiz_proto_rawDesc)))
	})
	return file_game_quiz_proto_rawDescData
}

var file_game_quiz_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_game_quiz_proto_goTypes = []any{
	(*GameQuiz)(nil),       // 0: game.GameQuiz
	(*Question)(nil),       // 1: game.Question
	(*PossibleAnswer)(nil), // 2: game.PossibleAnswer
}
var file_game_quiz_proto_depIdxs = []int32{
	1, // 0: game.GameQuiz.questions:type_name -> game.Question
	2, // 1: game.Question.possible_answers:type_name -> game.PossibleAnswer
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_game_quiz_proto_init() }
func file_game_quiz_proto_init() {
	if File_game_quiz_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_game_quiz_proto_rawDesc), len(file_game_quiz_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_game_quiz_proto_goTypes,
		DependencyIndexes: file_game_quiz_proto_depIdxs,
		MessageInfos:      file_game_quiz_proto_msgTypes,
	}.Build()
	File_game_quiz_proto = out.File
	file_game_quiz_proto_goTypes = nil
	file_game_quiz_proto_depIdxs = nil
}
